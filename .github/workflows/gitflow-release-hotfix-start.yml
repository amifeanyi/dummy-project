name: Release and Hotfix Start

###
#
# Initiates release process from issues
#
# Trigger: issues opened with release or hotfix labels
#
###
on:
  issues:
    types: [ opened ]

jobs:
  compile:
    runs-on: ubuntu-latest
    if: contains(join(github.event.issue.labels.*.name, ' '), 'release:') || contains(join(github.event.issue.labels.*.name, ' '), 'bug:hotfix')
    strategy:
      matrix:
        java: [11]
    name: Initiates release or hotfix process from issues
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - id: flow-type
        run: |
          echo ::set-output name=release::${{ contains(join(github.event.issue.labels.*.name, ' '), 'release:') }}
          echo ::set-output name=release_minor::${{ contains(join(github.event.issue.labels.*.name, ' '), 'release:minor') }}
          echo ::set-output name=release_major::${{ contains(join(github.event.issue.labels.*.name, ' '), 'release:major') }}
          echo ::set-output name=hotfix::${{ contains(join(github.event.issue.labels.*.name, ' '), 'bug:hotfix') }}

      - uses: actions/checkout@v2
        if: steps.flow-type.outputs.release == 'true'
        with:
          ref: develop

      - uses: actions/checkout@v2
        if: steps.flow-type.outputs.hotfix == 'true'
        with:
          ref: master

      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            ${{ runner.os }}-

      - name: Setup java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Set git username and email
        run: |
          git config --global user.email "bot@backbase.com"
          git config --global user.name "Release BOT"

      # Bump the version using semantic versioning
      # Release: major | minor | patch
      # Hotfix: patch
      - name: Bump Project Version
        id: target
        run: |
          MAJOR=$( mvn help:evaluate -Dexpression=project.artifact.selectedVersion.majorVersion -q -DforceStdout )
          MINOR=$( mvn help:evaluate -Dexpression=project.artifact.selectedVersion.minorVersion -q -DforceStdout )
          INCREMENTAL=$( mvn help:evaluate -Dexpression=project.artifact.selectedVersion.incrementalVersion -q -DforceStdout )
          if ${{ steps.flow-type.outputs.release_minor }} == 'true'
          then
            MINOR=`expr $MINOR + 1`
            NEW_VERSION=$MAJOR.$MINOR
          elif ${{ steps.flow-type.outputs.release_major }} == 'true'
          then
            MAJOR=`expr $MAJOR + 1`
            NEW_VERSION=$MAJOR.$MINOR
          elif ${{ steps.flow-type.outputs.hotfix }} == 'true'
          then
            INCREMENTAL=`expr $INCREMENTAL + 1`
            NEW_VERSION=$MAJOR.$MINOR.$INCREMENTAL
          fi
          echo ::set-output name=version::`echo $NEW_VERSION`

      - name: Start new Release
        if: steps.flow-type.outputs.release == 'true'
        run: |
          mvn -B gitflow:release-start -DpushRemote=true -DbranchName=${{ steps.target.outputs.version }} -DreleaseVersion=${{ steps.target.outputs.version }}.0-release

      - name: Start new Hotfix
        if: steps.flow-type.outputs.hotfix == 'true'
        run: |
          mvn -B gitflow:hotfix-start -DpushRemote=true -DhotfixName=${{ github.event.inputs.hotfixName }} -DhotfixVersion=${{ steps.target.outputs.version }}


      - name: Build docker image
        run: mvn clean package

      - name: Create Pull Request - release
        id: cpr-release
        if: steps.flow-type.outputs.release == 'true'
        uses: thomaseizinger/create-pull-request@master
        with:
          head: 'release/${{ steps.target.outputs.version }}'
          base: master
          title: "Next release: ${{ steps.target.outputs.version }}"
          body: |
            > This Pull Request contains code changes for release ${{ steps.target.outputs.version }}.
            >
            > Analyse carefully to ensure all the required changes are in place before merging.
            --
            ## ${{ github.event.issue.title }}
            ${{ github.event.issue.body }}
            --
            Automatically created by issue #${{ github.event.issue.number }}

      - name: Create Pull Request - hotfix
        id: cpr-hotfix
        if: steps.flow-type.outputs.hotfix == 'true'
        uses: thomaseizinger/create-pull-request@master
        with:
          head: 'hotfix/${{ steps.target.outputs.version }}'
          base: master
          title: "Hotfix: ${{ steps.target.outputs.version }}"
          body: |
            > This Pull Request contains code changes for release ${{ steps.target.outputs.version }}.
            >
            > Analyse carefully to ensure all the required changes are in place before merging.
            --
            ## ${{ github.event.issue.title }}
            ${{ github.event.issue.body }}
            --
            Automatically created by issue #${{ github.event.issue.number }}
